# -*- coding: utf-8 -*-
"""naive_bayes_spam_classifier

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uCCsnzntlC4dNH12PmgiYQhi_KtnicFp
"""

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
import pandas as pd
import numpy as np

df = pd.read_csv('spam_ham_dataset.csv')

series_texto = df['text']
series_label = df['label']

texto = series_texto.values
label = series_label.values

vect = CountVectorizer()

vect.fit(texto)

texto_dtm = vect.transform(texto)

nb = MultinomialNB()
nb.fit(texto_dtm, label)

"""exemplo:"""

#mensagem de spam retirada da base de dados
mensagem_spam = ['Subject: photoshop , windows , office . cheap . main trending\r\nabasements darer prudently fortuitous undergone\r\nlighthearted charm orinoco taster\r\nrailroad affluent pornographic cuvier\r\nirvin parkhouse blameworthy chlorophyll\r\nrobed diagrammatic fogarty clears bayda\r\ninconveniencing managing represented smartness hashish\r\nacademies shareholders unload badness\r\ndanielson pure caffein\r\nspaniard chargeable levin\r\n']
mensagem_spam_dtm = vect.transform(mensagem_spam).toarray()
print(f'mensagem:\n{mensagem_spam[0]}\nresposta: {nb.predict(mensagem_spam_dtm)[0]}')

#mensagem normal tirada da base de dados
mensagem_ham = ['Subject: hpl nom for january 9 , 2001\r\n( see attached file : hplnol 09 . xls )\r\n- hplnol 09 . xls']
mensagem_ham_dtm = vect.transform(mensagem_ham).toarray()
print(f'mensagem:\n{mensagem_ham[0]}\n\nresposta: {nb.predict(mensagem_ham_dtm)[0]}')